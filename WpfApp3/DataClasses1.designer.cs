#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WpfApp3
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="NorthVilleDatabase by RM AND JS")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertUsers_table(Users_table instance);
    partial void UpdateUsers_table(Users_table instance);
    partial void DeleteUsers_table(Users_table instance);
    partial void InsertBook(Book instance);
    partial void UpdateBook(Book instance);
    partial void DeleteBook(Book instance);
    partial void InsertBorrowTransaction(BorrowTransaction instance);
    partial void UpdateBorrowTransaction(BorrowTransaction instance);
    partial void DeleteBorrowTransaction(BorrowTransaction instance);
    partial void InsertNorthVilleStudent(NorthVilleStudent instance);
    partial void UpdateNorthVilleStudent(NorthVilleStudent instance);
    partial void DeleteNorthVilleStudent(NorthVilleStudent instance);
    partial void InsertLibraryVisit(LibraryVisit instance);
    partial void UpdateLibraryVisit(LibraryVisit instance);
    partial void DeleteLibraryVisit(LibraryVisit instance);
    partial void InsertISBN(ISBN instance);
    partial void UpdateISBN(ISBN instance);
    partial void DeleteISBN(ISBN instance);
    partial void InsertGenre(Genre instance);
    partial void UpdateGenre(Genre instance);
    partial void DeleteGenre(Genre instance);
    partial void InsertCourse(Course instance);
    partial void UpdateCourse(Course instance);
    partial void DeleteCourse(Course instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::WpfApp3.Properties.Settings.Default.NorthVilleDatabase_by_RM_AND_JSConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Users_table> Users_tables
		{
			get
			{
				return this.GetTable<Users_table>();
			}
		}
		
		public System.Data.Linq.Table<vw_AvailableCopy> vw_AvailableCopies
		{
			get
			{
				return this.GetTable<vw_AvailableCopy>();
			}
		}
		
		public System.Data.Linq.Table<Book> Books
		{
			get
			{
				return this.GetTable<Book>();
			}
		}
		
		public System.Data.Linq.Table<BorrowTransaction> BorrowTransactions
		{
			get
			{
				return this.GetTable<BorrowTransaction>();
			}
		}
		
		public System.Data.Linq.Table<NorthVilleStudent> NorthVilleStudents
		{
			get
			{
				return this.GetTable<NorthVilleStudent>();
			}
		}
		
		public System.Data.Linq.Table<LibraryVisit> LibraryVisits
		{
			get
			{
				return this.GetTable<LibraryVisit>();
			}
		}
		
		public System.Data.Linq.Table<ISBN> ISBNs
		{
			get
			{
				return this.GetTable<ISBN>();
			}
		}
		
		public System.Data.Linq.Table<Genre> Genres
		{
			get
			{
				return this.GetTable<Genre>();
			}
		}
		
		public System.Data.Linq.Table<vw_DailyFineCollection> vw_DailyFineCollections
		{
			get
			{
				return this.GetTable<vw_DailyFineCollection>();
			}
		}
		
		public System.Data.Linq.Table<vw_LibraryVisitReport> vw_LibraryVisitReports
		{
			get
			{
				return this.GetTable<vw_LibraryVisitReport>();
			}
		}
		
		public System.Data.Linq.Table<vw_OverdueBooksWithPayment> vw_OverdueBooksWithPayments
		{
			get
			{
				return this.GetTable<vw_OverdueBooksWithPayment>();
			}
		}
		
		public System.Data.Linq.Table<vw_StudentBorrowHistory> vw_StudentBorrowHistories
		{
			get
			{
				return this.GetTable<vw_StudentBorrowHistory>();
			}
		}
		
		public System.Data.Linq.Table<Course> Courses
		{
			get
			{
				return this.GetTable<Course>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_BorrowBook")]
		public int sp_BorrowBook([global::System.Data.Linq.Mapping.ParameterAttribute(Name="StudentID", DbType="VarChar(255)")] string studentID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="BookID", DbType="VarChar(255)")] string bookID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="BorrowDate", DbType="Date")] System.Nullable<System.DateTime> borrowDate)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), studentID, bookID, borrowDate);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_GenerateLibraryReport")]
		public int sp_GenerateLibraryReport()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_ReturnBook")]
		public int sp_ReturnBook([global::System.Data.Linq.Mapping.ParameterAttribute(Name="TransactionID", DbType="VarChar(255)")] string transactionID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ReturnDate", DbType="Date")] System.Nullable<System.DateTime> returnDate)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), transactionID, returnDate);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.udf_GetTotalBooksBorrowed", IsComposable=true)]
		public System.Nullable<int> udf_GetTotalBooksBorrowed([global::System.Data.Linq.Mapping.ParameterAttribute(Name="StudentID", DbType="VarChar(255)")] string studentID)
		{
			return ((System.Nullable<int>)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), studentID).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.udf_GetTotalFine", IsComposable=true)]
		public System.Nullable<int> udf_GetTotalFine([global::System.Data.Linq.Mapping.ParameterAttribute(Name="StudentID", DbType="VarChar(255)")] string studentID)
		{
			return ((System.Nullable<int>)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), studentID).ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Users_table")]
	public partial class Users_table : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserID;
		
		private string _Username;
		
		private string _PasswordHash;
		
		private string _Role;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnPasswordHashChanging(string value);
    partial void OnPasswordHashChanged();
    partial void OnRoleChanging(string value);
    partial void OnRoleChanged();
    #endregion
		
		public Users_table()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordHash", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string PasswordHash
		{
			get
			{
				return this._PasswordHash;
			}
			set
			{
				if ((this._PasswordHash != value))
				{
					this.OnPasswordHashChanging(value);
					this.SendPropertyChanging();
					this._PasswordHash = value;
					this.SendPropertyChanged("PasswordHash");
					this.OnPasswordHashChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Role", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string Role
		{
			get
			{
				return this._Role;
			}
			set
			{
				if ((this._Role != value))
				{
					this.OnRoleChanging(value);
					this.SendPropertyChanging();
					this._Role = value;
					this.SendPropertyChanged("Role");
					this.OnRoleChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.vw_AvailableCopies")]
	public partial class vw_AvailableCopy
	{
		
		private string _I_ISBNID;
		
		private string _I_BookName;
		
		private System.Nullable<int> _AvailableCopies;
		
		public vw_AvailableCopy()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_I_ISBNID", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string I_ISBNID
		{
			get
			{
				return this._I_ISBNID;
			}
			set
			{
				if ((this._I_ISBNID != value))
				{
					this._I_ISBNID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_I_BookName", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string I_BookName
		{
			get
			{
				return this._I_BookName;
			}
			set
			{
				if ((this._I_BookName != value))
				{
					this._I_BookName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AvailableCopies", DbType="Int")]
		public System.Nullable<int> AvailableCopies
		{
			get
			{
				return this._AvailableCopies;
			}
			set
			{
				if ((this._AvailableCopies != value))
				{
					this._AvailableCopies = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Book")]
	public partial class Book : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _B_BookID;
		
		private string _G_GenreID;
		
		private string _I_ISBNID;
		
		private EntitySet<BorrowTransaction> _BorrowTransactions;
		
		private EntityRef<ISBN> _ISBN;
		
		private EntityRef<Genre> _Genre;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnB_BookIDChanging(string value);
    partial void OnB_BookIDChanged();
    partial void OnG_GenreIDChanging(string value);
    partial void OnG_GenreIDChanged();
    partial void OnI_ISBNIDChanging(string value);
    partial void OnI_ISBNIDChanged();
    #endregion
		
		public Book()
		{
			this._BorrowTransactions = new EntitySet<BorrowTransaction>(new Action<BorrowTransaction>(this.attach_BorrowTransactions), new Action<BorrowTransaction>(this.detach_BorrowTransactions));
			this._ISBN = default(EntityRef<ISBN>);
			this._Genre = default(EntityRef<Genre>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_B_BookID", DbType="VarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string B_BookID
		{
			get
			{
				return this._B_BookID;
			}
			set
			{
				if ((this._B_BookID != value))
				{
					this.OnB_BookIDChanging(value);
					this.SendPropertyChanging();
					this._B_BookID = value;
					this.SendPropertyChanged("B_BookID");
					this.OnB_BookIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_G_GenreID", DbType="VarChar(255)")]
		public string G_GenreID
		{
			get
			{
				return this._G_GenreID;
			}
			set
			{
				if ((this._G_GenreID != value))
				{
					if (this._Genre.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnG_GenreIDChanging(value);
					this.SendPropertyChanging();
					this._G_GenreID = value;
					this.SendPropertyChanged("G_GenreID");
					this.OnG_GenreIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_I_ISBNID", DbType="VarChar(255)")]
		public string I_ISBNID
		{
			get
			{
				return this._I_ISBNID;
			}
			set
			{
				if ((this._I_ISBNID != value))
				{
					if (this._ISBN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnI_ISBNIDChanging(value);
					this.SendPropertyChanging();
					this._I_ISBNID = value;
					this.SendPropertyChanged("I_ISBNID");
					this.OnI_ISBNIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Book_BorrowTransaction", Storage="_BorrowTransactions", ThisKey="B_BookID", OtherKey="B_BookID")]
		public EntitySet<BorrowTransaction> BorrowTransactions
		{
			get
			{
				return this._BorrowTransactions;
			}
			set
			{
				this._BorrowTransactions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ISBN_Book", Storage="_ISBN", ThisKey="I_ISBNID", OtherKey="I_ISBNID", IsForeignKey=true)]
		public ISBN ISBN
		{
			get
			{
				return this._ISBN.Entity;
			}
			set
			{
				ISBN previousValue = this._ISBN.Entity;
				if (((previousValue != value) 
							|| (this._ISBN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ISBN.Entity = null;
						previousValue.Books.Remove(this);
					}
					this._ISBN.Entity = value;
					if ((value != null))
					{
						value.Books.Add(this);
						this._I_ISBNID = value.I_ISBNID;
					}
					else
					{
						this._I_ISBNID = default(string);
					}
					this.SendPropertyChanged("ISBN");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Genre_Book", Storage="_Genre", ThisKey="G_GenreID", OtherKey="G_GenreID", IsForeignKey=true)]
		public Genre Genre
		{
			get
			{
				return this._Genre.Entity;
			}
			set
			{
				Genre previousValue = this._Genre.Entity;
				if (((previousValue != value) 
							|| (this._Genre.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Genre.Entity = null;
						previousValue.Books.Remove(this);
					}
					this._Genre.Entity = value;
					if ((value != null))
					{
						value.Books.Add(this);
						this._G_GenreID = value.G_GenreID;
					}
					else
					{
						this._G_GenreID = default(string);
					}
					this.SendPropertyChanged("Genre");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BorrowTransactions(BorrowTransaction entity)
		{
			this.SendPropertyChanging();
			entity.Book = this;
		}
		
		private void detach_BorrowTransactions(BorrowTransaction entity)
		{
			this.SendPropertyChanging();
			entity.Book = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BorrowTransaction")]
	public partial class BorrowTransaction : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _T_TransactionID;
		
		private string _N_StudentID;
		
		private string _T_BorrowDate;
		
		private string _B_BookID;
		
		private string _T_ReturnDate;
		
		private string _T_TransactionNote;
		
		private EntitySet<LibraryVisit> _LibraryVisits;
		
		private EntityRef<Book> _Book;
		
		private EntityRef<NorthVilleStudent> _NorthVilleStudent;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnT_TransactionIDChanging(string value);
    partial void OnT_TransactionIDChanged();
    partial void OnN_StudentIDChanging(string value);
    partial void OnN_StudentIDChanged();
    partial void OnT_BorrowDateChanging(string value);
    partial void OnT_BorrowDateChanged();
    partial void OnB_BookIDChanging(string value);
    partial void OnB_BookIDChanged();
    partial void OnT_ReturnDateChanging(string value);
    partial void OnT_ReturnDateChanged();
    partial void OnT_TransactionNoteChanging(string value);
    partial void OnT_TransactionNoteChanged();
    #endregion
		
		public BorrowTransaction()
		{
			this._LibraryVisits = new EntitySet<LibraryVisit>(new Action<LibraryVisit>(this.attach_LibraryVisits), new Action<LibraryVisit>(this.detach_LibraryVisits));
			this._Book = default(EntityRef<Book>);
			this._NorthVilleStudent = default(EntityRef<NorthVilleStudent>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_T_TransactionID", DbType="VarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string T_TransactionID
		{
			get
			{
				return this._T_TransactionID;
			}
			set
			{
				if ((this._T_TransactionID != value))
				{
					this.OnT_TransactionIDChanging(value);
					this.SendPropertyChanging();
					this._T_TransactionID = value;
					this.SendPropertyChanged("T_TransactionID");
					this.OnT_TransactionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_N_StudentID", DbType="VarChar(255)")]
		public string N_StudentID
		{
			get
			{
				return this._N_StudentID;
			}
			set
			{
				if ((this._N_StudentID != value))
				{
					if (this._NorthVilleStudent.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnN_StudentIDChanging(value);
					this.SendPropertyChanging();
					this._N_StudentID = value;
					this.SendPropertyChanged("N_StudentID");
					this.OnN_StudentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_T_BorrowDate", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string T_BorrowDate
		{
			get
			{
				return this._T_BorrowDate;
			}
			set
			{
				if ((this._T_BorrowDate != value))
				{
					this.OnT_BorrowDateChanging(value);
					this.SendPropertyChanging();
					this._T_BorrowDate = value;
					this.SendPropertyChanged("T_BorrowDate");
					this.OnT_BorrowDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_B_BookID", DbType="VarChar(255)")]
		public string B_BookID
		{
			get
			{
				return this._B_BookID;
			}
			set
			{
				if ((this._B_BookID != value))
				{
					if (this._Book.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnB_BookIDChanging(value);
					this.SendPropertyChanging();
					this._B_BookID = value;
					this.SendPropertyChanged("B_BookID");
					this.OnB_BookIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_T_ReturnDate", DbType="VarChar(255)")]
		public string T_ReturnDate
		{
			get
			{
				return this._T_ReturnDate;
			}
			set
			{
				if ((this._T_ReturnDate != value))
				{
					this.OnT_ReturnDateChanging(value);
					this.SendPropertyChanging();
					this._T_ReturnDate = value;
					this.SendPropertyChanged("T_ReturnDate");
					this.OnT_ReturnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_T_TransactionNote", DbType="VarChar(255)")]
		public string T_TransactionNote
		{
			get
			{
				return this._T_TransactionNote;
			}
			set
			{
				if ((this._T_TransactionNote != value))
				{
					this.OnT_TransactionNoteChanging(value);
					this.SendPropertyChanging();
					this._T_TransactionNote = value;
					this.SendPropertyChanged("T_TransactionNote");
					this.OnT_TransactionNoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BorrowTransaction_LibraryVisit", Storage="_LibraryVisits", ThisKey="T_TransactionID", OtherKey="T_TransactionID")]
		public EntitySet<LibraryVisit> LibraryVisits
		{
			get
			{
				return this._LibraryVisits;
			}
			set
			{
				this._LibraryVisits.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Book_BorrowTransaction", Storage="_Book", ThisKey="B_BookID", OtherKey="B_BookID", IsForeignKey=true)]
		public Book Book
		{
			get
			{
				return this._Book.Entity;
			}
			set
			{
				Book previousValue = this._Book.Entity;
				if (((previousValue != value) 
							|| (this._Book.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Book.Entity = null;
						previousValue.BorrowTransactions.Remove(this);
					}
					this._Book.Entity = value;
					if ((value != null))
					{
						value.BorrowTransactions.Add(this);
						this._B_BookID = value.B_BookID;
					}
					else
					{
						this._B_BookID = default(string);
					}
					this.SendPropertyChanged("Book");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NorthVilleStudent_BorrowTransaction", Storage="_NorthVilleStudent", ThisKey="N_StudentID", OtherKey="N_StudentID", IsForeignKey=true)]
		public NorthVilleStudent NorthVilleStudent
		{
			get
			{
				return this._NorthVilleStudent.Entity;
			}
			set
			{
				NorthVilleStudent previousValue = this._NorthVilleStudent.Entity;
				if (((previousValue != value) 
							|| (this._NorthVilleStudent.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NorthVilleStudent.Entity = null;
						previousValue.BorrowTransactions.Remove(this);
					}
					this._NorthVilleStudent.Entity = value;
					if ((value != null))
					{
						value.BorrowTransactions.Add(this);
						this._N_StudentID = value.N_StudentID;
					}
					else
					{
						this._N_StudentID = default(string);
					}
					this.SendPropertyChanged("NorthVilleStudent");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LibraryVisits(LibraryVisit entity)
		{
			this.SendPropertyChanging();
			entity.BorrowTransaction = this;
		}
		
		private void detach_LibraryVisits(LibraryVisit entity)
		{
			this.SendPropertyChanging();
			entity.BorrowTransaction = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NorthVilleStudent")]
	public partial class NorthVilleStudent : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _N_StudentID;
		
		private string _N_FirstName;
		
		private string _N_LastName;
		
		private string _N_Email;
		
		private string _N_PhoneNumber;
		
		private string _C_CourseID;
		
		private EntitySet<BorrowTransaction> _BorrowTransactions;
		
		private EntitySet<LibraryVisit> _LibraryVisits;
		
		private EntityRef<Course> _Course;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnN_StudentIDChanging(string value);
    partial void OnN_StudentIDChanged();
    partial void OnN_FirstNameChanging(string value);
    partial void OnN_FirstNameChanged();
    partial void OnN_LastNameChanging(string value);
    partial void OnN_LastNameChanged();
    partial void OnN_EmailChanging(string value);
    partial void OnN_EmailChanged();
    partial void OnN_PhoneNumberChanging(string value);
    partial void OnN_PhoneNumberChanged();
    partial void OnC_CourseIDChanging(string value);
    partial void OnC_CourseIDChanged();
    #endregion
		
		public NorthVilleStudent()
		{
			this._BorrowTransactions = new EntitySet<BorrowTransaction>(new Action<BorrowTransaction>(this.attach_BorrowTransactions), new Action<BorrowTransaction>(this.detach_BorrowTransactions));
			this._LibraryVisits = new EntitySet<LibraryVisit>(new Action<LibraryVisit>(this.attach_LibraryVisits), new Action<LibraryVisit>(this.detach_LibraryVisits));
			this._Course = default(EntityRef<Course>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_N_StudentID", DbType="VarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string N_StudentID
		{
			get
			{
				return this._N_StudentID;
			}
			set
			{
				if ((this._N_StudentID != value))
				{
					this.OnN_StudentIDChanging(value);
					this.SendPropertyChanging();
					this._N_StudentID = value;
					this.SendPropertyChanged("N_StudentID");
					this.OnN_StudentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_N_FirstName", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string N_FirstName
		{
			get
			{
				return this._N_FirstName;
			}
			set
			{
				if ((this._N_FirstName != value))
				{
					this.OnN_FirstNameChanging(value);
					this.SendPropertyChanging();
					this._N_FirstName = value;
					this.SendPropertyChanged("N_FirstName");
					this.OnN_FirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_N_LastName", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string N_LastName
		{
			get
			{
				return this._N_LastName;
			}
			set
			{
				if ((this._N_LastName != value))
				{
					this.OnN_LastNameChanging(value);
					this.SendPropertyChanging();
					this._N_LastName = value;
					this.SendPropertyChanged("N_LastName");
					this.OnN_LastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_N_Email", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string N_Email
		{
			get
			{
				return this._N_Email;
			}
			set
			{
				if ((this._N_Email != value))
				{
					this.OnN_EmailChanging(value);
					this.SendPropertyChanging();
					this._N_Email = value;
					this.SendPropertyChanged("N_Email");
					this.OnN_EmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_N_PhoneNumber", DbType="VarChar(255)")]
		public string N_PhoneNumber
		{
			get
			{
				return this._N_PhoneNumber;
			}
			set
			{
				if ((this._N_PhoneNumber != value))
				{
					this.OnN_PhoneNumberChanging(value);
					this.SendPropertyChanging();
					this._N_PhoneNumber = value;
					this.SendPropertyChanged("N_PhoneNumber");
					this.OnN_PhoneNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_C_CourseID", DbType="VarChar(255)")]
		public string C_CourseID
		{
			get
			{
				return this._C_CourseID;
			}
			set
			{
				if ((this._C_CourseID != value))
				{
					if (this._Course.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnC_CourseIDChanging(value);
					this.SendPropertyChanging();
					this._C_CourseID = value;
					this.SendPropertyChanged("C_CourseID");
					this.OnC_CourseIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NorthVilleStudent_BorrowTransaction", Storage="_BorrowTransactions", ThisKey="N_StudentID", OtherKey="N_StudentID")]
		public EntitySet<BorrowTransaction> BorrowTransactions
		{
			get
			{
				return this._BorrowTransactions;
			}
			set
			{
				this._BorrowTransactions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NorthVilleStudent_LibraryVisit", Storage="_LibraryVisits", ThisKey="N_StudentID", OtherKey="N_StudentID")]
		public EntitySet<LibraryVisit> LibraryVisits
		{
			get
			{
				return this._LibraryVisits;
			}
			set
			{
				this._LibraryVisits.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Course_NorthVilleStudent", Storage="_Course", ThisKey="C_CourseID", OtherKey="C_CourseID", IsForeignKey=true)]
		public Course Course
		{
			get
			{
				return this._Course.Entity;
			}
			set
			{
				Course previousValue = this._Course.Entity;
				if (((previousValue != value) 
							|| (this._Course.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Course.Entity = null;
						previousValue.NorthVilleStudents.Remove(this);
					}
					this._Course.Entity = value;
					if ((value != null))
					{
						value.NorthVilleStudents.Add(this);
						this._C_CourseID = value.C_CourseID;
					}
					else
					{
						this._C_CourseID = default(string);
					}
					this.SendPropertyChanged("Course");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BorrowTransactions(BorrowTransaction entity)
		{
			this.SendPropertyChanging();
			entity.NorthVilleStudent = this;
		}
		
		private void detach_BorrowTransactions(BorrowTransaction entity)
		{
			this.SendPropertyChanging();
			entity.NorthVilleStudent = null;
		}
		
		private void attach_LibraryVisits(LibraryVisit entity)
		{
			this.SendPropertyChanging();
			entity.NorthVilleStudent = this;
		}
		
		private void detach_LibraryVisits(LibraryVisit entity)
		{
			this.SendPropertyChanging();
			entity.NorthVilleStudent = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LibraryVisit")]
	public partial class LibraryVisit : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _L_LibraryVisitID;
		
		private string _N_StudentID;
		
		private string _T_TransactionID;
		
		private string _L_LibraryVisitDate;
		
		private System.Nullable<System.TimeSpan> _L_LibraryInTime;
		
		private System.Nullable<System.TimeSpan> _L_LibraryOutTime;
		
		private EntityRef<NorthVilleStudent> _NorthVilleStudent;
		
		private EntityRef<BorrowTransaction> _BorrowTransaction;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnL_LibraryVisitIDChanging(string value);
    partial void OnL_LibraryVisitIDChanged();
    partial void OnN_StudentIDChanging(string value);
    partial void OnN_StudentIDChanged();
    partial void OnT_TransactionIDChanging(string value);
    partial void OnT_TransactionIDChanged();
    partial void OnL_LibraryVisitDateChanging(string value);
    partial void OnL_LibraryVisitDateChanged();
    partial void OnL_LibraryInTimeChanging(System.Nullable<System.TimeSpan> value);
    partial void OnL_LibraryInTimeChanged();
    partial void OnL_LibraryOutTimeChanging(System.Nullable<System.TimeSpan> value);
    partial void OnL_LibraryOutTimeChanged();
    #endregion
		
		public LibraryVisit()
		{
			this._NorthVilleStudent = default(EntityRef<NorthVilleStudent>);
			this._BorrowTransaction = default(EntityRef<BorrowTransaction>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_L_LibraryVisitID", DbType="VarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string L_LibraryVisitID
		{
			get
			{
				return this._L_LibraryVisitID;
			}
			set
			{
				if ((this._L_LibraryVisitID != value))
				{
					this.OnL_LibraryVisitIDChanging(value);
					this.SendPropertyChanging();
					this._L_LibraryVisitID = value;
					this.SendPropertyChanged("L_LibraryVisitID");
					this.OnL_LibraryVisitIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_N_StudentID", DbType="VarChar(255)")]
		public string N_StudentID
		{
			get
			{
				return this._N_StudentID;
			}
			set
			{
				if ((this._N_StudentID != value))
				{
					if (this._NorthVilleStudent.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnN_StudentIDChanging(value);
					this.SendPropertyChanging();
					this._N_StudentID = value;
					this.SendPropertyChanged("N_StudentID");
					this.OnN_StudentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_T_TransactionID", DbType="VarChar(255)")]
		public string T_TransactionID
		{
			get
			{
				return this._T_TransactionID;
			}
			set
			{
				if ((this._T_TransactionID != value))
				{
					if (this._BorrowTransaction.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnT_TransactionIDChanging(value);
					this.SendPropertyChanging();
					this._T_TransactionID = value;
					this.SendPropertyChanged("T_TransactionID");
					this.OnT_TransactionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_L_LibraryVisitDate", DbType="VarChar(255)")]
		public string L_LibraryVisitDate
		{
			get
			{
				return this._L_LibraryVisitDate;
			}
			set
			{
				if ((this._L_LibraryVisitDate != value))
				{
					this.OnL_LibraryVisitDateChanging(value);
					this.SendPropertyChanging();
					this._L_LibraryVisitDate = value;
					this.SendPropertyChanged("L_LibraryVisitDate");
					this.OnL_LibraryVisitDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_L_LibraryInTime", DbType="Time")]
		public System.Nullable<System.TimeSpan> L_LibraryInTime
		{
			get
			{
				return this._L_LibraryInTime;
			}
			set
			{
				if ((this._L_LibraryInTime != value))
				{
					this.OnL_LibraryInTimeChanging(value);
					this.SendPropertyChanging();
					this._L_LibraryInTime = value;
					this.SendPropertyChanged("L_LibraryInTime");
					this.OnL_LibraryInTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_L_LibraryOutTime", DbType="Time")]
		public System.Nullable<System.TimeSpan> L_LibraryOutTime
		{
			get
			{
				return this._L_LibraryOutTime;
			}
			set
			{
				if ((this._L_LibraryOutTime != value))
				{
					this.OnL_LibraryOutTimeChanging(value);
					this.SendPropertyChanging();
					this._L_LibraryOutTime = value;
					this.SendPropertyChanged("L_LibraryOutTime");
					this.OnL_LibraryOutTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NorthVilleStudent_LibraryVisit", Storage="_NorthVilleStudent", ThisKey="N_StudentID", OtherKey="N_StudentID", IsForeignKey=true)]
		public NorthVilleStudent NorthVilleStudent
		{
			get
			{
				return this._NorthVilleStudent.Entity;
			}
			set
			{
				NorthVilleStudent previousValue = this._NorthVilleStudent.Entity;
				if (((previousValue != value) 
							|| (this._NorthVilleStudent.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NorthVilleStudent.Entity = null;
						previousValue.LibraryVisits.Remove(this);
					}
					this._NorthVilleStudent.Entity = value;
					if ((value != null))
					{
						value.LibraryVisits.Add(this);
						this._N_StudentID = value.N_StudentID;
					}
					else
					{
						this._N_StudentID = default(string);
					}
					this.SendPropertyChanged("NorthVilleStudent");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BorrowTransaction_LibraryVisit", Storage="_BorrowTransaction", ThisKey="T_TransactionID", OtherKey="T_TransactionID", IsForeignKey=true)]
		public BorrowTransaction BorrowTransaction
		{
			get
			{
				return this._BorrowTransaction.Entity;
			}
			set
			{
				BorrowTransaction previousValue = this._BorrowTransaction.Entity;
				if (((previousValue != value) 
							|| (this._BorrowTransaction.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BorrowTransaction.Entity = null;
						previousValue.LibraryVisits.Remove(this);
					}
					this._BorrowTransaction.Entity = value;
					if ((value != null))
					{
						value.LibraryVisits.Add(this);
						this._T_TransactionID = value.T_TransactionID;
					}
					else
					{
						this._T_TransactionID = default(string);
					}
					this.SendPropertyChanged("BorrowTransaction");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ISBN")]
	public partial class ISBN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _I_ISBNID;
		
		private string _I_BookName;
		
		private string _I_BookAuthor;
		
		private string _I_PublicationYear;
		
		private EntitySet<Book> _Books;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnI_ISBNIDChanging(string value);
    partial void OnI_ISBNIDChanged();
    partial void OnI_BookNameChanging(string value);
    partial void OnI_BookNameChanged();
    partial void OnI_BookAuthorChanging(string value);
    partial void OnI_BookAuthorChanged();
    partial void OnI_PublicationYearChanging(string value);
    partial void OnI_PublicationYearChanged();
    #endregion
		
		public ISBN()
		{
			this._Books = new EntitySet<Book>(new Action<Book>(this.attach_Books), new Action<Book>(this.detach_Books));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_I_ISBNID", DbType="VarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string I_ISBNID
		{
			get
			{
				return this._I_ISBNID;
			}
			set
			{
				if ((this._I_ISBNID != value))
				{
					this.OnI_ISBNIDChanging(value);
					this.SendPropertyChanging();
					this._I_ISBNID = value;
					this.SendPropertyChanged("I_ISBNID");
					this.OnI_ISBNIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_I_BookName", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string I_BookName
		{
			get
			{
				return this._I_BookName;
			}
			set
			{
				if ((this._I_BookName != value))
				{
					this.OnI_BookNameChanging(value);
					this.SendPropertyChanging();
					this._I_BookName = value;
					this.SendPropertyChanged("I_BookName");
					this.OnI_BookNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_I_BookAuthor", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string I_BookAuthor
		{
			get
			{
				return this._I_BookAuthor;
			}
			set
			{
				if ((this._I_BookAuthor != value))
				{
					this.OnI_BookAuthorChanging(value);
					this.SendPropertyChanging();
					this._I_BookAuthor = value;
					this.SendPropertyChanged("I_BookAuthor");
					this.OnI_BookAuthorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_I_PublicationYear", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string I_PublicationYear
		{
			get
			{
				return this._I_PublicationYear;
			}
			set
			{
				if ((this._I_PublicationYear != value))
				{
					this.OnI_PublicationYearChanging(value);
					this.SendPropertyChanging();
					this._I_PublicationYear = value;
					this.SendPropertyChanged("I_PublicationYear");
					this.OnI_PublicationYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ISBN_Book", Storage="_Books", ThisKey="I_ISBNID", OtherKey="I_ISBNID")]
		public EntitySet<Book> Books
		{
			get
			{
				return this._Books;
			}
			set
			{
				this._Books.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Books(Book entity)
		{
			this.SendPropertyChanging();
			entity.ISBN = this;
		}
		
		private void detach_Books(Book entity)
		{
			this.SendPropertyChanging();
			entity.ISBN = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Genre")]
	public partial class Genre : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _G_GenreID;
		
		private string _G_GenreDescription;
		
		private EntitySet<Book> _Books;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnG_GenreIDChanging(string value);
    partial void OnG_GenreIDChanged();
    partial void OnG_GenreDescriptionChanging(string value);
    partial void OnG_GenreDescriptionChanged();
    #endregion
		
		public Genre()
		{
			this._Books = new EntitySet<Book>(new Action<Book>(this.attach_Books), new Action<Book>(this.detach_Books));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_G_GenreID", DbType="VarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string G_GenreID
		{
			get
			{
				return this._G_GenreID;
			}
			set
			{
				if ((this._G_GenreID != value))
				{
					this.OnG_GenreIDChanging(value);
					this.SendPropertyChanging();
					this._G_GenreID = value;
					this.SendPropertyChanged("G_GenreID");
					this.OnG_GenreIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_G_GenreDescription", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string G_GenreDescription
		{
			get
			{
				return this._G_GenreDescription;
			}
			set
			{
				if ((this._G_GenreDescription != value))
				{
					this.OnG_GenreDescriptionChanging(value);
					this.SendPropertyChanging();
					this._G_GenreDescription = value;
					this.SendPropertyChanged("G_GenreDescription");
					this.OnG_GenreDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Genre_Book", Storage="_Books", ThisKey="G_GenreID", OtherKey="G_GenreID")]
		public EntitySet<Book> Books
		{
			get
			{
				return this._Books;
			}
			set
			{
				this._Books.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Books(Book entity)
		{
			this.SendPropertyChanging();
			entity.Genre = this;
		}
		
		private void detach_Books(Book entity)
		{
			this.SendPropertyChanging();
			entity.Genre = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.vw_DailyFineCollection")]
	public partial class vw_DailyFineCollection
	{
		
		private string _PaymentDate;
		
		private System.Nullable<int> _TotalCollected;
		
		public vw_DailyFineCollection()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentDate", DbType="VarChar(255)")]
		public string PaymentDate
		{
			get
			{
				return this._PaymentDate;
			}
			set
			{
				if ((this._PaymentDate != value))
				{
					this._PaymentDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalCollected", DbType="Int")]
		public System.Nullable<int> TotalCollected
		{
			get
			{
				return this._TotalCollected;
			}
			set
			{
				if ((this._TotalCollected != value))
				{
					this._TotalCollected = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.vw_LibraryVisitReport")]
	public partial class vw_LibraryVisitReport
	{
		
		private string _N_StudentID;
		
		private System.Nullable<int> _TotalVisits;
		
		public vw_LibraryVisitReport()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_N_StudentID", DbType="VarChar(255)")]
		public string N_StudentID
		{
			get
			{
				return this._N_StudentID;
			}
			set
			{
				if ((this._N_StudentID != value))
				{
					this._N_StudentID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalVisits", DbType="Int")]
		public System.Nullable<int> TotalVisits
		{
			get
			{
				return this._TotalVisits;
			}
			set
			{
				if ((this._TotalVisits != value))
				{
					this._TotalVisits = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.vw_OverdueBooksWithPayment")]
	public partial class vw_OverdueBooksWithPayment
	{
		
		private string _N_StudentID;
		
		private string _StudentName;
		
		private string _Title;
		
		private string _BorrowDate;
		
		private string _ReturnDate;
		
		private System.Nullable<int> _DaysOverdue;
		
		private System.Nullable<int> _FineAmount;
		
		private string _PaymentStatus;
		
		public vw_OverdueBooksWithPayment()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_N_StudentID", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string N_StudentID
		{
			get
			{
				return this._N_StudentID;
			}
			set
			{
				if ((this._N_StudentID != value))
				{
					this._N_StudentID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentName", DbType="VarChar(511) NOT NULL", CanBeNull=false)]
		public string StudentName
		{
			get
			{
				return this._StudentName;
			}
			set
			{
				if ((this._StudentName != value))
				{
					this._StudentName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this._Title = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BorrowDate", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string BorrowDate
		{
			get
			{
				return this._BorrowDate;
			}
			set
			{
				if ((this._BorrowDate != value))
				{
					this._BorrowDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReturnDate", DbType="VarChar(255)")]
		public string ReturnDate
		{
			get
			{
				return this._ReturnDate;
			}
			set
			{
				if ((this._ReturnDate != value))
				{
					this._ReturnDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DaysOverdue", DbType="Int")]
		public System.Nullable<int> DaysOverdue
		{
			get
			{
				return this._DaysOverdue;
			}
			set
			{
				if ((this._DaysOverdue != value))
				{
					this._DaysOverdue = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FineAmount", DbType="Int")]
		public System.Nullable<int> FineAmount
		{
			get
			{
				return this._FineAmount;
			}
			set
			{
				if ((this._FineAmount != value))
				{
					this._FineAmount = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaymentStatus", DbType="VarChar(6) NOT NULL", CanBeNull=false)]
		public string PaymentStatus
		{
			get
			{
				return this._PaymentStatus;
			}
			set
			{
				if ((this._PaymentStatus != value))
				{
					this._PaymentStatus = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.vw_StudentBorrowHistory")]
	public partial class vw_StudentBorrowHistory
	{
		
		private string _N_StudentID;
		
		private string _StudentName;
		
		private string _Title;
		
		private string _BorrowDate;
		
		private string _ReturnDate;
		
		private string _Status;
		
		public vw_StudentBorrowHistory()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_N_StudentID", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string N_StudentID
		{
			get
			{
				return this._N_StudentID;
			}
			set
			{
				if ((this._N_StudentID != value))
				{
					this._N_StudentID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudentName", DbType="VarChar(511) NOT NULL", CanBeNull=false)]
		public string StudentName
		{
			get
			{
				return this._StudentName;
			}
			set
			{
				if ((this._StudentName != value))
				{
					this._StudentName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this._Title = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BorrowDate", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string BorrowDate
		{
			get
			{
				return this._BorrowDate;
			}
			set
			{
				if ((this._BorrowDate != value))
				{
					this._BorrowDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReturnDate", DbType="VarChar(255)")]
		public string ReturnDate
		{
			get
			{
				return this._ReturnDate;
			}
			set
			{
				if ((this._ReturnDate != value))
				{
					this._ReturnDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="VarChar(12) NOT NULL", CanBeNull=false)]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this._Status = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Course")]
	public partial class Course : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _C_CourseID;
		
		private string _C_CourseName;
		
		private EntitySet<NorthVilleStudent> _NorthVilleStudents;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnC_CourseIDChanging(string value);
    partial void OnC_CourseIDChanged();
    partial void OnC_CourseNameChanging(string value);
    partial void OnC_CourseNameChanged();
    #endregion
		
		public Course()
		{
			this._NorthVilleStudents = new EntitySet<NorthVilleStudent>(new Action<NorthVilleStudent>(this.attach_NorthVilleStudents), new Action<NorthVilleStudent>(this.detach_NorthVilleStudents));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_C_CourseID", DbType="VarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string C_CourseID
		{
			get
			{
				return this._C_CourseID;
			}
			set
			{
				if ((this._C_CourseID != value))
				{
					this.OnC_CourseIDChanging(value);
					this.SendPropertyChanging();
					this._C_CourseID = value;
					this.SendPropertyChanged("C_CourseID");
					this.OnC_CourseIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_C_CourseName", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string C_CourseName
		{
			get
			{
				return this._C_CourseName;
			}
			set
			{
				if ((this._C_CourseName != value))
				{
					this.OnC_CourseNameChanging(value);
					this.SendPropertyChanging();
					this._C_CourseName = value;
					this.SendPropertyChanged("C_CourseName");
					this.OnC_CourseNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Course_NorthVilleStudent", Storage="_NorthVilleStudents", ThisKey="C_CourseID", OtherKey="C_CourseID")]
		public EntitySet<NorthVilleStudent> NorthVilleStudents
		{
			get
			{
				return this._NorthVilleStudents;
			}
			set
			{
				this._NorthVilleStudents.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_NorthVilleStudents(NorthVilleStudent entity)
		{
			this.SendPropertyChanging();
			entity.Course = this;
		}
		
		private void detach_NorthVilleStudents(NorthVilleStudent entity)
		{
			this.SendPropertyChanging();
			entity.Course = null;
		}
	}
}
#pragma warning restore 1591
