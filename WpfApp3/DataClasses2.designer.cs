#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WpfApp3
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="FacultyEvaluation")]
	public partial class DataClasses2DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAdminFacultyEval(AdminFacultyEval instance);
    partial void UpdateAdminFacultyEval(AdminFacultyEval instance);
    partial void DeleteAdminFacultyEval(AdminFacultyEval instance);
    partial void InsertAnswer(Answer instance);
    partial void UpdateAnswer(Answer instance);
    partial void DeleteAnswer(Answer instance);
    partial void InsertCourse(Course instance);
    partial void UpdateCourse(Course instance);
    partial void DeleteCourse(Course instance);
    partial void InsertEvaluationForm(EvaluationForm instance);
    partial void UpdateEvaluationForm(EvaluationForm instance);
    partial void DeleteEvaluationForm(EvaluationForm instance);
    partial void InsertEvaluationQuestion(EvaluationQuestion instance);
    partial void UpdateEvaluationQuestion(EvaluationQuestion instance);
    partial void DeleteEvaluationQuestion(EvaluationQuestion instance);
    partial void InsertEvaluationResponse(EvaluationResponse instance);
    partial void UpdateEvaluationResponse(EvaluationResponse instance);
    partial void DeleteEvaluationResponse(EvaluationResponse instance);
    partial void InsertFaculty(Faculty instance);
    partial void UpdateFaculty(Faculty instance);
    partial void DeleteFaculty(Faculty instance);
    partial void InsertFacultyAssignment(FacultyAssignment instance);
    partial void UpdateFacultyAssignment(FacultyAssignment instance);
    partial void DeleteFacultyAssignment(FacultyAssignment instance);
    partial void InsertSection(Section instance);
    partial void UpdateSection(Section instance);
    partial void DeleteSection(Section instance);
    partial void InsertStudentsSouthville(StudentsSouthville instance);
    partial void UpdateStudentsSouthville(StudentsSouthville instance);
    partial void DeleteStudentsSouthville(StudentsSouthville instance);
    partial void InsertUserLogin(UserLogin instance);
    partial void UpdateUserLogin(UserLogin instance);
    partial void DeleteUserLogin(UserLogin instance);
    #endregion
		
		public DataClasses2DataContext() : 
				base(global::WpfApp3.Properties.Settings.Default.FacultyEvaluationConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses2DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses2DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses2DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses2DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<AdminFacultyEval> AdminFacultyEvals
		{
			get
			{
				return this.GetTable<AdminFacultyEval>();
			}
		}
		
		public System.Data.Linq.Table<Answer> Answers
		{
			get
			{
				return this.GetTable<Answer>();
			}
		}
		
		public System.Data.Linq.Table<Course> Courses
		{
			get
			{
				return this.GetTable<Course>();
			}
		}
		
		public System.Data.Linq.Table<EvaluationForm> EvaluationForms
		{
			get
			{
				return this.GetTable<EvaluationForm>();
			}
		}
		
		public System.Data.Linq.Table<EvaluationQuestion> EvaluationQuestions
		{
			get
			{
				return this.GetTable<EvaluationQuestion>();
			}
		}
		
		public System.Data.Linq.Table<EvaluationResponse> EvaluationResponses
		{
			get
			{
				return this.GetTable<EvaluationResponse>();
			}
		}
		
		public System.Data.Linq.Table<Faculty> Faculties
		{
			get
			{
				return this.GetTable<Faculty>();
			}
		}
		
		public System.Data.Linq.Table<FacultyAssignment> FacultyAssignments
		{
			get
			{
				return this.GetTable<FacultyAssignment>();
			}
		}
		
		public System.Data.Linq.Table<Section> Sections
		{
			get
			{
				return this.GetTable<Section>();
			}
		}
		
		public System.Data.Linq.Table<StudentsSouthville> StudentsSouthvilles
		{
			get
			{
				return this.GetTable<StudentsSouthville>();
			}
		}
		
		public System.Data.Linq.Table<UserLogin> UserLogins
		{
			get
			{
				return this.GetTable<UserLogin>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AdminFacultyEval")]
	public partial class AdminFacultyEval : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _A_AdminID;
		
		private string _A_FirstName;
		
		private string _A_LastName;
		
		private string _A_Position;
		
		private string _U_UserID;
		
		private EntityRef<UserLogin> _UserLogin;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnA_AdminIDChanging(string value);
    partial void OnA_AdminIDChanged();
    partial void OnA_FirstNameChanging(string value);
    partial void OnA_FirstNameChanged();
    partial void OnA_LastNameChanging(string value);
    partial void OnA_LastNameChanged();
    partial void OnA_PositionChanging(string value);
    partial void OnA_PositionChanged();
    partial void OnU_UserIDChanging(string value);
    partial void OnU_UserIDChanged();
    #endregion
		
		public AdminFacultyEval()
		{
			this._UserLogin = default(EntityRef<UserLogin>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_A_AdminID", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string A_AdminID
		{
			get
			{
				return this._A_AdminID;
			}
			set
			{
				if ((this._A_AdminID != value))
				{
					this.OnA_AdminIDChanging(value);
					this.SendPropertyChanging();
					this._A_AdminID = value;
					this.SendPropertyChanged("A_AdminID");
					this.OnA_AdminIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_A_FirstName", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string A_FirstName
		{
			get
			{
				return this._A_FirstName;
			}
			set
			{
				if ((this._A_FirstName != value))
				{
					this.OnA_FirstNameChanging(value);
					this.SendPropertyChanging();
					this._A_FirstName = value;
					this.SendPropertyChanged("A_FirstName");
					this.OnA_FirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_A_LastName", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string A_LastName
		{
			get
			{
				return this._A_LastName;
			}
			set
			{
				if ((this._A_LastName != value))
				{
					this.OnA_LastNameChanging(value);
					this.SendPropertyChanging();
					this._A_LastName = value;
					this.SendPropertyChanged("A_LastName");
					this.OnA_LastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_A_Position", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string A_Position
		{
			get
			{
				return this._A_Position;
			}
			set
			{
				if ((this._A_Position != value))
				{
					this.OnA_PositionChanging(value);
					this.SendPropertyChanging();
					this._A_Position = value;
					this.SendPropertyChanged("A_Position");
					this.OnA_PositionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_U_UserID", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string U_UserID
		{
			get
			{
				return this._U_UserID;
			}
			set
			{
				if ((this._U_UserID != value))
				{
					if (this._UserLogin.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnU_UserIDChanging(value);
					this.SendPropertyChanging();
					this._U_UserID = value;
					this.SendPropertyChanged("U_UserID");
					this.OnU_UserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserLogin_AdminFacultyEval", Storage="_UserLogin", ThisKey="U_UserID", OtherKey="U_UserID", IsForeignKey=true)]
		public UserLogin UserLogin
		{
			get
			{
				return this._UserLogin.Entity;
			}
			set
			{
				UserLogin previousValue = this._UserLogin.Entity;
				if (((previousValue != value) 
							|| (this._UserLogin.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserLogin.Entity = null;
						previousValue.AdminFacultyEvals.Remove(this);
					}
					this._UserLogin.Entity = value;
					if ((value != null))
					{
						value.AdminFacultyEvals.Add(this);
						this._U_UserID = value.U_UserID;
					}
					else
					{
						this._U_UserID = default(string);
					}
					this.SendPropertyChanged("UserLogin");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Answer")]
	public partial class Answer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _A_AnswerID;
		
		private string _E_EvaluationResponseID;
		
		private string _E_EvaluationQuestionID;
		
		private int _A_Rating;
		
		private string _A_Comment;
		
		private EntityRef<EvaluationQuestion> _EvaluationQuestion;
		
		private EntityRef<EvaluationResponse> _EvaluationResponse;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnA_AnswerIDChanging(string value);
    partial void OnA_AnswerIDChanged();
    partial void OnE_EvaluationResponseIDChanging(string value);
    partial void OnE_EvaluationResponseIDChanged();
    partial void OnE_EvaluationQuestionIDChanging(string value);
    partial void OnE_EvaluationQuestionIDChanged();
    partial void OnA_RatingChanging(int value);
    partial void OnA_RatingChanged();
    partial void OnA_CommentChanging(string value);
    partial void OnA_CommentChanged();
    #endregion
		
		public Answer()
		{
			this._EvaluationQuestion = default(EntityRef<EvaluationQuestion>);
			this._EvaluationResponse = default(EntityRef<EvaluationResponse>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_A_AnswerID", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string A_AnswerID
		{
			get
			{
				return this._A_AnswerID;
			}
			set
			{
				if ((this._A_AnswerID != value))
				{
					this.OnA_AnswerIDChanging(value);
					this.SendPropertyChanging();
					this._A_AnswerID = value;
					this.SendPropertyChanged("A_AnswerID");
					this.OnA_AnswerIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_E_EvaluationResponseID", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string E_EvaluationResponseID
		{
			get
			{
				return this._E_EvaluationResponseID;
			}
			set
			{
				if ((this._E_EvaluationResponseID != value))
				{
					if (this._EvaluationResponse.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnE_EvaluationResponseIDChanging(value);
					this.SendPropertyChanging();
					this._E_EvaluationResponseID = value;
					this.SendPropertyChanged("E_EvaluationResponseID");
					this.OnE_EvaluationResponseIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_E_EvaluationQuestionID", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string E_EvaluationQuestionID
		{
			get
			{
				return this._E_EvaluationQuestionID;
			}
			set
			{
				if ((this._E_EvaluationQuestionID != value))
				{
					if (this._EvaluationQuestion.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnE_EvaluationQuestionIDChanging(value);
					this.SendPropertyChanging();
					this._E_EvaluationQuestionID = value;
					this.SendPropertyChanged("E_EvaluationQuestionID");
					this.OnE_EvaluationQuestionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_A_Rating", DbType="Int NOT NULL")]
		public int A_Rating
		{
			get
			{
				return this._A_Rating;
			}
			set
			{
				if ((this._A_Rating != value))
				{
					this.OnA_RatingChanging(value);
					this.SendPropertyChanging();
					this._A_Rating = value;
					this.SendPropertyChanged("A_Rating");
					this.OnA_RatingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_A_Comment", DbType="VarChar(255)")]
		public string A_Comment
		{
			get
			{
				return this._A_Comment;
			}
			set
			{
				if ((this._A_Comment != value))
				{
					this.OnA_CommentChanging(value);
					this.SendPropertyChanging();
					this._A_Comment = value;
					this.SendPropertyChanged("A_Comment");
					this.OnA_CommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EvaluationQuestion_Answer", Storage="_EvaluationQuestion", ThisKey="E_EvaluationQuestionID", OtherKey="E_EvaluationQuestionID", IsForeignKey=true)]
		public EvaluationQuestion EvaluationQuestion
		{
			get
			{
				return this._EvaluationQuestion.Entity;
			}
			set
			{
				EvaluationQuestion previousValue = this._EvaluationQuestion.Entity;
				if (((previousValue != value) 
							|| (this._EvaluationQuestion.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EvaluationQuestion.Entity = null;
						previousValue.Answers.Remove(this);
					}
					this._EvaluationQuestion.Entity = value;
					if ((value != null))
					{
						value.Answers.Add(this);
						this._E_EvaluationQuestionID = value.E_EvaluationQuestionID;
					}
					else
					{
						this._E_EvaluationQuestionID = default(string);
					}
					this.SendPropertyChanged("EvaluationQuestion");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EvaluationResponse_Answer", Storage="_EvaluationResponse", ThisKey="E_EvaluationResponseID", OtherKey="E_EvaluationResponseID", IsForeignKey=true)]
		public EvaluationResponse EvaluationResponse
		{
			get
			{
				return this._EvaluationResponse.Entity;
			}
			set
			{
				EvaluationResponse previousValue = this._EvaluationResponse.Entity;
				if (((previousValue != value) 
							|| (this._EvaluationResponse.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EvaluationResponse.Entity = null;
						previousValue.Answers.Remove(this);
					}
					this._EvaluationResponse.Entity = value;
					if ((value != null))
					{
						value.Answers.Add(this);
						this._E_EvaluationResponseID = value.E_EvaluationResponseID;
					}
					else
					{
						this._E_EvaluationResponseID = default(string);
					}
					this.SendPropertyChanged("EvaluationResponse");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Course")]
	public partial class Course : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _C_CourseID;
		
		private string _C_CourseName;
		
		private EntitySet<Section> _Sections;
		
		private EntitySet<StudentsSouthville> _StudentsSouthvilles;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnC_CourseIDChanging(string value);
    partial void OnC_CourseIDChanged();
    partial void OnC_CourseNameChanging(string value);
    partial void OnC_CourseNameChanged();
    #endregion
		
		public Course()
		{
			this._Sections = new EntitySet<Section>(new Action<Section>(this.attach_Sections), new Action<Section>(this.detach_Sections));
			this._StudentsSouthvilles = new EntitySet<StudentsSouthville>(new Action<StudentsSouthville>(this.attach_StudentsSouthvilles), new Action<StudentsSouthville>(this.detach_StudentsSouthvilles));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_C_CourseID", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string C_CourseID
		{
			get
			{
				return this._C_CourseID;
			}
			set
			{
				if ((this._C_CourseID != value))
				{
					this.OnC_CourseIDChanging(value);
					this.SendPropertyChanging();
					this._C_CourseID = value;
					this.SendPropertyChanged("C_CourseID");
					this.OnC_CourseIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_C_CourseName", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string C_CourseName
		{
			get
			{
				return this._C_CourseName;
			}
			set
			{
				if ((this._C_CourseName != value))
				{
					this.OnC_CourseNameChanging(value);
					this.SendPropertyChanging();
					this._C_CourseName = value;
					this.SendPropertyChanged("C_CourseName");
					this.OnC_CourseNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Course_Section", Storage="_Sections", ThisKey="C_CourseID", OtherKey="C_CourseID")]
		public EntitySet<Section> Sections
		{
			get
			{
				return this._Sections;
			}
			set
			{
				this._Sections.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Course_StudentsSouthville", Storage="_StudentsSouthvilles", ThisKey="C_CourseID", OtherKey="C_CourseID")]
		public EntitySet<StudentsSouthville> StudentsSouthvilles
		{
			get
			{
				return this._StudentsSouthvilles;
			}
			set
			{
				this._StudentsSouthvilles.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Sections(Section entity)
		{
			this.SendPropertyChanging();
			entity.Course = this;
		}
		
		private void detach_Sections(Section entity)
		{
			this.SendPropertyChanging();
			entity.Course = null;
		}
		
		private void attach_StudentsSouthvilles(StudentsSouthville entity)
		{
			this.SendPropertyChanging();
			entity.Course = this;
		}
		
		private void detach_StudentsSouthvilles(StudentsSouthville entity)
		{
			this.SendPropertyChanging();
			entity.Course = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EvaluationForm")]
	public partial class EvaluationForm : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _E_EvaluationFormID;
		
		private string _E_Title;
		
		private string _E_Status;
		
		private EntitySet<EvaluationQuestion> _EvaluationQuestions;
		
		private EntitySet<EvaluationResponse> _EvaluationResponses;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnE_EvaluationFormIDChanging(string value);
    partial void OnE_EvaluationFormIDChanged();
    partial void OnE_TitleChanging(string value);
    partial void OnE_TitleChanged();
    partial void OnE_StatusChanging(string value);
    partial void OnE_StatusChanged();
    #endregion
		
		public EvaluationForm()
		{
			this._EvaluationQuestions = new EntitySet<EvaluationQuestion>(new Action<EvaluationQuestion>(this.attach_EvaluationQuestions), new Action<EvaluationQuestion>(this.detach_EvaluationQuestions));
			this._EvaluationResponses = new EntitySet<EvaluationResponse>(new Action<EvaluationResponse>(this.attach_EvaluationResponses), new Action<EvaluationResponse>(this.detach_EvaluationResponses));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_E_EvaluationFormID", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string E_EvaluationFormID
		{
			get
			{
				return this._E_EvaluationFormID;
			}
			set
			{
				if ((this._E_EvaluationFormID != value))
				{
					this.OnE_EvaluationFormIDChanging(value);
					this.SendPropertyChanging();
					this._E_EvaluationFormID = value;
					this.SendPropertyChanged("E_EvaluationFormID");
					this.OnE_EvaluationFormIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_E_Title", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string E_Title
		{
			get
			{
				return this._E_Title;
			}
			set
			{
				if ((this._E_Title != value))
				{
					this.OnE_TitleChanging(value);
					this.SendPropertyChanging();
					this._E_Title = value;
					this.SendPropertyChanged("E_Title");
					this.OnE_TitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_E_Status", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string E_Status
		{
			get
			{
				return this._E_Status;
			}
			set
			{
				if ((this._E_Status != value))
				{
					this.OnE_StatusChanging(value);
					this.SendPropertyChanging();
					this._E_Status = value;
					this.SendPropertyChanged("E_Status");
					this.OnE_StatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EvaluationForm_EvaluationQuestion", Storage="_EvaluationQuestions", ThisKey="E_EvaluationFormID", OtherKey="E_EvaluationFormID")]
		public EntitySet<EvaluationQuestion> EvaluationQuestions
		{
			get
			{
				return this._EvaluationQuestions;
			}
			set
			{
				this._EvaluationQuestions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EvaluationForm_EvaluationResponse", Storage="_EvaluationResponses", ThisKey="E_EvaluationFormID", OtherKey="E_EvaluationFormID")]
		public EntitySet<EvaluationResponse> EvaluationResponses
		{
			get
			{
				return this._EvaluationResponses;
			}
			set
			{
				this._EvaluationResponses.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_EvaluationQuestions(EvaluationQuestion entity)
		{
			this.SendPropertyChanging();
			entity.EvaluationForm = this;
		}
		
		private void detach_EvaluationQuestions(EvaluationQuestion entity)
		{
			this.SendPropertyChanging();
			entity.EvaluationForm = null;
		}
		
		private void attach_EvaluationResponses(EvaluationResponse entity)
		{
			this.SendPropertyChanging();
			entity.EvaluationForm = this;
		}
		
		private void detach_EvaluationResponses(EvaluationResponse entity)
		{
			this.SendPropertyChanging();
			entity.EvaluationForm = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EvaluationQuestion")]
	public partial class EvaluationQuestion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _E_EvaluationQuestionID;
		
		private string _E_EvaluationFormID;
		
		private string _E_Question;
		
		private EntitySet<Answer> _Answers;
		
		private EntityRef<EvaluationForm> _EvaluationForm;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnE_EvaluationQuestionIDChanging(string value);
    partial void OnE_EvaluationQuestionIDChanged();
    partial void OnE_EvaluationFormIDChanging(string value);
    partial void OnE_EvaluationFormIDChanged();
    partial void OnE_QuestionChanging(string value);
    partial void OnE_QuestionChanged();
    #endregion
		
		public EvaluationQuestion()
		{
			this._Answers = new EntitySet<Answer>(new Action<Answer>(this.attach_Answers), new Action<Answer>(this.detach_Answers));
			this._EvaluationForm = default(EntityRef<EvaluationForm>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_E_EvaluationQuestionID", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string E_EvaluationQuestionID
		{
			get
			{
				return this._E_EvaluationQuestionID;
			}
			set
			{
				if ((this._E_EvaluationQuestionID != value))
				{
					this.OnE_EvaluationQuestionIDChanging(value);
					this.SendPropertyChanging();
					this._E_EvaluationQuestionID = value;
					this.SendPropertyChanged("E_EvaluationQuestionID");
					this.OnE_EvaluationQuestionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_E_EvaluationFormID", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string E_EvaluationFormID
		{
			get
			{
				return this._E_EvaluationFormID;
			}
			set
			{
				if ((this._E_EvaluationFormID != value))
				{
					if (this._EvaluationForm.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnE_EvaluationFormIDChanging(value);
					this.SendPropertyChanging();
					this._E_EvaluationFormID = value;
					this.SendPropertyChanged("E_EvaluationFormID");
					this.OnE_EvaluationFormIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_E_Question", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string E_Question
		{
			get
			{
				return this._E_Question;
			}
			set
			{
				if ((this._E_Question != value))
				{
					this.OnE_QuestionChanging(value);
					this.SendPropertyChanging();
					this._E_Question = value;
					this.SendPropertyChanged("E_Question");
					this.OnE_QuestionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EvaluationQuestion_Answer", Storage="_Answers", ThisKey="E_EvaluationQuestionID", OtherKey="E_EvaluationQuestionID")]
		public EntitySet<Answer> Answers
		{
			get
			{
				return this._Answers;
			}
			set
			{
				this._Answers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EvaluationForm_EvaluationQuestion", Storage="_EvaluationForm", ThisKey="E_EvaluationFormID", OtherKey="E_EvaluationFormID", IsForeignKey=true)]
		public EvaluationForm EvaluationForm
		{
			get
			{
				return this._EvaluationForm.Entity;
			}
			set
			{
				EvaluationForm previousValue = this._EvaluationForm.Entity;
				if (((previousValue != value) 
							|| (this._EvaluationForm.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EvaluationForm.Entity = null;
						previousValue.EvaluationQuestions.Remove(this);
					}
					this._EvaluationForm.Entity = value;
					if ((value != null))
					{
						value.EvaluationQuestions.Add(this);
						this._E_EvaluationFormID = value.E_EvaluationFormID;
					}
					else
					{
						this._E_EvaluationFormID = default(string);
					}
					this.SendPropertyChanged("EvaluationForm");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Answers(Answer entity)
		{
			this.SendPropertyChanging();
			entity.EvaluationQuestion = this;
		}
		
		private void detach_Answers(Answer entity)
		{
			this.SendPropertyChanging();
			entity.EvaluationQuestion = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EvaluationResponse")]
	public partial class EvaluationResponse : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _E_EvaluationResponseID;
		
		private string _S_StudentID;
		
		private string _F_FacultyAssignmentID;
		
		private string _E_EvaluationFormID;
		
		private System.DateTime _E_Date;
		
		private EntitySet<Answer> _Answers;
		
		private EntityRef<EvaluationForm> _EvaluationForm;
		
		private EntityRef<FacultyAssignment> _FacultyAssignment;
		
		private EntityRef<StudentsSouthville> _StudentsSouthville;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnE_EvaluationResponseIDChanging(string value);
    partial void OnE_EvaluationResponseIDChanged();
    partial void OnS_StudentIDChanging(string value);
    partial void OnS_StudentIDChanged();
    partial void OnF_FacultyAssignmentIDChanging(string value);
    partial void OnF_FacultyAssignmentIDChanged();
    partial void OnE_EvaluationFormIDChanging(string value);
    partial void OnE_EvaluationFormIDChanged();
    partial void OnE_DateChanging(System.DateTime value);
    partial void OnE_DateChanged();
    #endregion
		
		public EvaluationResponse()
		{
			this._Answers = new EntitySet<Answer>(new Action<Answer>(this.attach_Answers), new Action<Answer>(this.detach_Answers));
			this._EvaluationForm = default(EntityRef<EvaluationForm>);
			this._FacultyAssignment = default(EntityRef<FacultyAssignment>);
			this._StudentsSouthville = default(EntityRef<StudentsSouthville>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_E_EvaluationResponseID", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string E_EvaluationResponseID
		{
			get
			{
				return this._E_EvaluationResponseID;
			}
			set
			{
				if ((this._E_EvaluationResponseID != value))
				{
					this.OnE_EvaluationResponseIDChanging(value);
					this.SendPropertyChanging();
					this._E_EvaluationResponseID = value;
					this.SendPropertyChanged("E_EvaluationResponseID");
					this.OnE_EvaluationResponseIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_S_StudentID", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string S_StudentID
		{
			get
			{
				return this._S_StudentID;
			}
			set
			{
				if ((this._S_StudentID != value))
				{
					if (this._StudentsSouthville.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnS_StudentIDChanging(value);
					this.SendPropertyChanging();
					this._S_StudentID = value;
					this.SendPropertyChanged("S_StudentID");
					this.OnS_StudentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_F_FacultyAssignmentID", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string F_FacultyAssignmentID
		{
			get
			{
				return this._F_FacultyAssignmentID;
			}
			set
			{
				if ((this._F_FacultyAssignmentID != value))
				{
					if (this._FacultyAssignment.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnF_FacultyAssignmentIDChanging(value);
					this.SendPropertyChanging();
					this._F_FacultyAssignmentID = value;
					this.SendPropertyChanged("F_FacultyAssignmentID");
					this.OnF_FacultyAssignmentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_E_EvaluationFormID", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string E_EvaluationFormID
		{
			get
			{
				return this._E_EvaluationFormID;
			}
			set
			{
				if ((this._E_EvaluationFormID != value))
				{
					if (this._EvaluationForm.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnE_EvaluationFormIDChanging(value);
					this.SendPropertyChanging();
					this._E_EvaluationFormID = value;
					this.SendPropertyChanged("E_EvaluationFormID");
					this.OnE_EvaluationFormIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_E_Date", DbType="Date NOT NULL")]
		public System.DateTime E_Date
		{
			get
			{
				return this._E_Date;
			}
			set
			{
				if ((this._E_Date != value))
				{
					this.OnE_DateChanging(value);
					this.SendPropertyChanging();
					this._E_Date = value;
					this.SendPropertyChanged("E_Date");
					this.OnE_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EvaluationResponse_Answer", Storage="_Answers", ThisKey="E_EvaluationResponseID", OtherKey="E_EvaluationResponseID")]
		public EntitySet<Answer> Answers
		{
			get
			{
				return this._Answers;
			}
			set
			{
				this._Answers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="EvaluationForm_EvaluationResponse", Storage="_EvaluationForm", ThisKey="E_EvaluationFormID", OtherKey="E_EvaluationFormID", IsForeignKey=true)]
		public EvaluationForm EvaluationForm
		{
			get
			{
				return this._EvaluationForm.Entity;
			}
			set
			{
				EvaluationForm previousValue = this._EvaluationForm.Entity;
				if (((previousValue != value) 
							|| (this._EvaluationForm.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EvaluationForm.Entity = null;
						previousValue.EvaluationResponses.Remove(this);
					}
					this._EvaluationForm.Entity = value;
					if ((value != null))
					{
						value.EvaluationResponses.Add(this);
						this._E_EvaluationFormID = value.E_EvaluationFormID;
					}
					else
					{
						this._E_EvaluationFormID = default(string);
					}
					this.SendPropertyChanged("EvaluationForm");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FacultyAssignment_EvaluationResponse", Storage="_FacultyAssignment", ThisKey="F_FacultyAssignmentID", OtherKey="F_FacultyAssignmentID", IsForeignKey=true)]
		public FacultyAssignment FacultyAssignment
		{
			get
			{
				return this._FacultyAssignment.Entity;
			}
			set
			{
				FacultyAssignment previousValue = this._FacultyAssignment.Entity;
				if (((previousValue != value) 
							|| (this._FacultyAssignment.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._FacultyAssignment.Entity = null;
						previousValue.EvaluationResponses.Remove(this);
					}
					this._FacultyAssignment.Entity = value;
					if ((value != null))
					{
						value.EvaluationResponses.Add(this);
						this._F_FacultyAssignmentID = value.F_FacultyAssignmentID;
					}
					else
					{
						this._F_FacultyAssignmentID = default(string);
					}
					this.SendPropertyChanged("FacultyAssignment");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StudentsSouthville_EvaluationResponse", Storage="_StudentsSouthville", ThisKey="S_StudentID", OtherKey="S_StudentID", IsForeignKey=true)]
		public StudentsSouthville StudentsSouthville
		{
			get
			{
				return this._StudentsSouthville.Entity;
			}
			set
			{
				StudentsSouthville previousValue = this._StudentsSouthville.Entity;
				if (((previousValue != value) 
							|| (this._StudentsSouthville.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._StudentsSouthville.Entity = null;
						previousValue.EvaluationResponses.Remove(this);
					}
					this._StudentsSouthville.Entity = value;
					if ((value != null))
					{
						value.EvaluationResponses.Add(this);
						this._S_StudentID = value.S_StudentID;
					}
					else
					{
						this._S_StudentID = default(string);
					}
					this.SendPropertyChanged("StudentsSouthville");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Answers(Answer entity)
		{
			this.SendPropertyChanging();
			entity.EvaluationResponse = this;
		}
		
		private void detach_Answers(Answer entity)
		{
			this.SendPropertyChanging();
			entity.EvaluationResponse = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Faculty")]
	public partial class Faculty : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _F_FacultyID;
		
		private string _F_FirstName;
		
		private string _F_LastName;
		
		private string _F_Department;
		
		private EntitySet<FacultyAssignment> _FacultyAssignments;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnF_FacultyIDChanging(string value);
    partial void OnF_FacultyIDChanged();
    partial void OnF_FirstNameChanging(string value);
    partial void OnF_FirstNameChanged();
    partial void OnF_LastNameChanging(string value);
    partial void OnF_LastNameChanged();
    partial void OnF_DepartmentChanging(string value);
    partial void OnF_DepartmentChanged();
    #endregion
		
		public Faculty()
		{
			this._FacultyAssignments = new EntitySet<FacultyAssignment>(new Action<FacultyAssignment>(this.attach_FacultyAssignments), new Action<FacultyAssignment>(this.detach_FacultyAssignments));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_F_FacultyID", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string F_FacultyID
		{
			get
			{
				return this._F_FacultyID;
			}
			set
			{
				if ((this._F_FacultyID != value))
				{
					this.OnF_FacultyIDChanging(value);
					this.SendPropertyChanging();
					this._F_FacultyID = value;
					this.SendPropertyChanged("F_FacultyID");
					this.OnF_FacultyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_F_FirstName", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string F_FirstName
		{
			get
			{
				return this._F_FirstName;
			}
			set
			{
				if ((this._F_FirstName != value))
				{
					this.OnF_FirstNameChanging(value);
					this.SendPropertyChanging();
					this._F_FirstName = value;
					this.SendPropertyChanged("F_FirstName");
					this.OnF_FirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_F_LastName", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string F_LastName
		{
			get
			{
				return this._F_LastName;
			}
			set
			{
				if ((this._F_LastName != value))
				{
					this.OnF_LastNameChanging(value);
					this.SendPropertyChanging();
					this._F_LastName = value;
					this.SendPropertyChanged("F_LastName");
					this.OnF_LastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_F_Department", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string F_Department
		{
			get
			{
				return this._F_Department;
			}
			set
			{
				if ((this._F_Department != value))
				{
					this.OnF_DepartmentChanging(value);
					this.SendPropertyChanging();
					this._F_Department = value;
					this.SendPropertyChanged("F_Department");
					this.OnF_DepartmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Faculty_FacultyAssignment", Storage="_FacultyAssignments", ThisKey="F_FacultyID", OtherKey="F_FacultyID")]
		public EntitySet<FacultyAssignment> FacultyAssignments
		{
			get
			{
				return this._FacultyAssignments;
			}
			set
			{
				this._FacultyAssignments.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FacultyAssignments(FacultyAssignment entity)
		{
			this.SendPropertyChanging();
			entity.Faculty = this;
		}
		
		private void detach_FacultyAssignments(FacultyAssignment entity)
		{
			this.SendPropertyChanging();
			entity.Faculty = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FacultyAssignment")]
	public partial class FacultyAssignment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _F_FacultyAssignmentID;
		
		private string _F_FacultyID;
		
		private string _S_SectionID;
		
		private string _F_Semester;
		
		private string _F_SchoolYear;
		
		private EntitySet<EvaluationResponse> _EvaluationResponses;
		
		private EntityRef<Faculty> _Faculty;
		
		private EntityRef<Section> _Section;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnF_FacultyAssignmentIDChanging(string value);
    partial void OnF_FacultyAssignmentIDChanged();
    partial void OnF_FacultyIDChanging(string value);
    partial void OnF_FacultyIDChanged();
    partial void OnS_SectionIDChanging(string value);
    partial void OnS_SectionIDChanged();
    partial void OnF_SemesterChanging(string value);
    partial void OnF_SemesterChanged();
    partial void OnF_SchoolYearChanging(string value);
    partial void OnF_SchoolYearChanged();
    #endregion
		
		public FacultyAssignment()
		{
			this._EvaluationResponses = new EntitySet<EvaluationResponse>(new Action<EvaluationResponse>(this.attach_EvaluationResponses), new Action<EvaluationResponse>(this.detach_EvaluationResponses));
			this._Faculty = default(EntityRef<Faculty>);
			this._Section = default(EntityRef<Section>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_F_FacultyAssignmentID", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string F_FacultyAssignmentID
		{
			get
			{
				return this._F_FacultyAssignmentID;
			}
			set
			{
				if ((this._F_FacultyAssignmentID != value))
				{
					this.OnF_FacultyAssignmentIDChanging(value);
					this.SendPropertyChanging();
					this._F_FacultyAssignmentID = value;
					this.SendPropertyChanged("F_FacultyAssignmentID");
					this.OnF_FacultyAssignmentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_F_FacultyID", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string F_FacultyID
		{
			get
			{
				return this._F_FacultyID;
			}
			set
			{
				if ((this._F_FacultyID != value))
				{
					if (this._Faculty.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnF_FacultyIDChanging(value);
					this.SendPropertyChanging();
					this._F_FacultyID = value;
					this.SendPropertyChanged("F_FacultyID");
					this.OnF_FacultyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_S_SectionID", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string S_SectionID
		{
			get
			{
				return this._S_SectionID;
			}
			set
			{
				if ((this._S_SectionID != value))
				{
					if (this._Section.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnS_SectionIDChanging(value);
					this.SendPropertyChanging();
					this._S_SectionID = value;
					this.SendPropertyChanged("S_SectionID");
					this.OnS_SectionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_F_Semester", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string F_Semester
		{
			get
			{
				return this._F_Semester;
			}
			set
			{
				if ((this._F_Semester != value))
				{
					this.OnF_SemesterChanging(value);
					this.SendPropertyChanging();
					this._F_Semester = value;
					this.SendPropertyChanged("F_Semester");
					this.OnF_SemesterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_F_SchoolYear", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string F_SchoolYear
		{
			get
			{
				return this._F_SchoolYear;
			}
			set
			{
				if ((this._F_SchoolYear != value))
				{
					this.OnF_SchoolYearChanging(value);
					this.SendPropertyChanging();
					this._F_SchoolYear = value;
					this.SendPropertyChanged("F_SchoolYear");
					this.OnF_SchoolYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="FacultyAssignment_EvaluationResponse", Storage="_EvaluationResponses", ThisKey="F_FacultyAssignmentID", OtherKey="F_FacultyAssignmentID")]
		public EntitySet<EvaluationResponse> EvaluationResponses
		{
			get
			{
				return this._EvaluationResponses;
			}
			set
			{
				this._EvaluationResponses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Faculty_FacultyAssignment", Storage="_Faculty", ThisKey="F_FacultyID", OtherKey="F_FacultyID", IsForeignKey=true)]
		public Faculty Faculty
		{
			get
			{
				return this._Faculty.Entity;
			}
			set
			{
				Faculty previousValue = this._Faculty.Entity;
				if (((previousValue != value) 
							|| (this._Faculty.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Faculty.Entity = null;
						previousValue.FacultyAssignments.Remove(this);
					}
					this._Faculty.Entity = value;
					if ((value != null))
					{
						value.FacultyAssignments.Add(this);
						this._F_FacultyID = value.F_FacultyID;
					}
					else
					{
						this._F_FacultyID = default(string);
					}
					this.SendPropertyChanged("Faculty");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Section_FacultyAssignment", Storage="_Section", ThisKey="S_SectionID", OtherKey="S_SectionID", IsForeignKey=true)]
		public Section Section
		{
			get
			{
				return this._Section.Entity;
			}
			set
			{
				Section previousValue = this._Section.Entity;
				if (((previousValue != value) 
							|| (this._Section.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Section.Entity = null;
						previousValue.FacultyAssignments.Remove(this);
					}
					this._Section.Entity = value;
					if ((value != null))
					{
						value.FacultyAssignments.Add(this);
						this._S_SectionID = value.S_SectionID;
					}
					else
					{
						this._S_SectionID = default(string);
					}
					this.SendPropertyChanged("Section");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_EvaluationResponses(EvaluationResponse entity)
		{
			this.SendPropertyChanging();
			entity.FacultyAssignment = this;
		}
		
		private void detach_EvaluationResponses(EvaluationResponse entity)
		{
			this.SendPropertyChanging();
			entity.FacultyAssignment = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Section")]
	public partial class Section : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _S_SectionID;
		
		private string _S_SectionName;
		
		private int _S_YearLevel;
		
		private string _C_CourseID;
		
		private EntitySet<FacultyAssignment> _FacultyAssignments;
		
		private EntitySet<StudentsSouthville> _StudentsSouthvilles;
		
		private EntityRef<Course> _Course;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnS_SectionIDChanging(string value);
    partial void OnS_SectionIDChanged();
    partial void OnS_SectionNameChanging(string value);
    partial void OnS_SectionNameChanged();
    partial void OnS_YearLevelChanging(int value);
    partial void OnS_YearLevelChanged();
    partial void OnC_CourseIDChanging(string value);
    partial void OnC_CourseIDChanged();
    #endregion
		
		public Section()
		{
			this._FacultyAssignments = new EntitySet<FacultyAssignment>(new Action<FacultyAssignment>(this.attach_FacultyAssignments), new Action<FacultyAssignment>(this.detach_FacultyAssignments));
			this._StudentsSouthvilles = new EntitySet<StudentsSouthville>(new Action<StudentsSouthville>(this.attach_StudentsSouthvilles), new Action<StudentsSouthville>(this.detach_StudentsSouthvilles));
			this._Course = default(EntityRef<Course>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_S_SectionID", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string S_SectionID
		{
			get
			{
				return this._S_SectionID;
			}
			set
			{
				if ((this._S_SectionID != value))
				{
					this.OnS_SectionIDChanging(value);
					this.SendPropertyChanging();
					this._S_SectionID = value;
					this.SendPropertyChanged("S_SectionID");
					this.OnS_SectionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_S_SectionName", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string S_SectionName
		{
			get
			{
				return this._S_SectionName;
			}
			set
			{
				if ((this._S_SectionName != value))
				{
					this.OnS_SectionNameChanging(value);
					this.SendPropertyChanging();
					this._S_SectionName = value;
					this.SendPropertyChanged("S_SectionName");
					this.OnS_SectionNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_S_YearLevel", DbType="Int NOT NULL")]
		public int S_YearLevel
		{
			get
			{
				return this._S_YearLevel;
			}
			set
			{
				if ((this._S_YearLevel != value))
				{
					this.OnS_YearLevelChanging(value);
					this.SendPropertyChanging();
					this._S_YearLevel = value;
					this.SendPropertyChanged("S_YearLevel");
					this.OnS_YearLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_C_CourseID", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string C_CourseID
		{
			get
			{
				return this._C_CourseID;
			}
			set
			{
				if ((this._C_CourseID != value))
				{
					if (this._Course.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnC_CourseIDChanging(value);
					this.SendPropertyChanging();
					this._C_CourseID = value;
					this.SendPropertyChanged("C_CourseID");
					this.OnC_CourseIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Section_FacultyAssignment", Storage="_FacultyAssignments", ThisKey="S_SectionID", OtherKey="S_SectionID")]
		public EntitySet<FacultyAssignment> FacultyAssignments
		{
			get
			{
				return this._FacultyAssignments;
			}
			set
			{
				this._FacultyAssignments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Section_StudentsSouthville", Storage="_StudentsSouthvilles", ThisKey="S_SectionID", OtherKey="S_SectionID")]
		public EntitySet<StudentsSouthville> StudentsSouthvilles
		{
			get
			{
				return this._StudentsSouthvilles;
			}
			set
			{
				this._StudentsSouthvilles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Course_Section", Storage="_Course", ThisKey="C_CourseID", OtherKey="C_CourseID", IsForeignKey=true)]
		public Course Course
		{
			get
			{
				return this._Course.Entity;
			}
			set
			{
				Course previousValue = this._Course.Entity;
				if (((previousValue != value) 
							|| (this._Course.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Course.Entity = null;
						previousValue.Sections.Remove(this);
					}
					this._Course.Entity = value;
					if ((value != null))
					{
						value.Sections.Add(this);
						this._C_CourseID = value.C_CourseID;
					}
					else
					{
						this._C_CourseID = default(string);
					}
					this.SendPropertyChanged("Course");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_FacultyAssignments(FacultyAssignment entity)
		{
			this.SendPropertyChanging();
			entity.Section = this;
		}
		
		private void detach_FacultyAssignments(FacultyAssignment entity)
		{
			this.SendPropertyChanging();
			entity.Section = null;
		}
		
		private void attach_StudentsSouthvilles(StudentsSouthville entity)
		{
			this.SendPropertyChanging();
			entity.Section = this;
		}
		
		private void detach_StudentsSouthvilles(StudentsSouthville entity)
		{
			this.SendPropertyChanging();
			entity.Section = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StudentsSouthville")]
	public partial class StudentsSouthville : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _S_StudentID;
		
		private string _S_FirstName;
		
		private string _S_LastName;
		
		private string _U_UserID;
		
		private string _C_CourseID;
		
		private string _S_SectionID;
		
		private EntitySet<EvaluationResponse> _EvaluationResponses;
		
		private EntityRef<Course> _Course;
		
		private EntityRef<Section> _Section;
		
		private EntityRef<UserLogin> _UserLogin;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnS_StudentIDChanging(string value);
    partial void OnS_StudentIDChanged();
    partial void OnS_FirstNameChanging(string value);
    partial void OnS_FirstNameChanged();
    partial void OnS_LastNameChanging(string value);
    partial void OnS_LastNameChanged();
    partial void OnU_UserIDChanging(string value);
    partial void OnU_UserIDChanged();
    partial void OnC_CourseIDChanging(string value);
    partial void OnC_CourseIDChanged();
    partial void OnS_SectionIDChanging(string value);
    partial void OnS_SectionIDChanged();
    #endregion
		
		public StudentsSouthville()
		{
			this._EvaluationResponses = new EntitySet<EvaluationResponse>(new Action<EvaluationResponse>(this.attach_EvaluationResponses), new Action<EvaluationResponse>(this.detach_EvaluationResponses));
			this._Course = default(EntityRef<Course>);
			this._Section = default(EntityRef<Section>);
			this._UserLogin = default(EntityRef<UserLogin>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_S_StudentID", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string S_StudentID
		{
			get
			{
				return this._S_StudentID;
			}
			set
			{
				if ((this._S_StudentID != value))
				{
					this.OnS_StudentIDChanging(value);
					this.SendPropertyChanging();
					this._S_StudentID = value;
					this.SendPropertyChanged("S_StudentID");
					this.OnS_StudentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_S_FirstName", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string S_FirstName
		{
			get
			{
				return this._S_FirstName;
			}
			set
			{
				if ((this._S_FirstName != value))
				{
					this.OnS_FirstNameChanging(value);
					this.SendPropertyChanging();
					this._S_FirstName = value;
					this.SendPropertyChanged("S_FirstName");
					this.OnS_FirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_S_LastName", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string S_LastName
		{
			get
			{
				return this._S_LastName;
			}
			set
			{
				if ((this._S_LastName != value))
				{
					this.OnS_LastNameChanging(value);
					this.SendPropertyChanging();
					this._S_LastName = value;
					this.SendPropertyChanged("S_LastName");
					this.OnS_LastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_U_UserID", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string U_UserID
		{
			get
			{
				return this._U_UserID;
			}
			set
			{
				if ((this._U_UserID != value))
				{
					if (this._UserLogin.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnU_UserIDChanging(value);
					this.SendPropertyChanging();
					this._U_UserID = value;
					this.SendPropertyChanged("U_UserID");
					this.OnU_UserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_C_CourseID", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string C_CourseID
		{
			get
			{
				return this._C_CourseID;
			}
			set
			{
				if ((this._C_CourseID != value))
				{
					if (this._Course.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnC_CourseIDChanging(value);
					this.SendPropertyChanging();
					this._C_CourseID = value;
					this.SendPropertyChanged("C_CourseID");
					this.OnC_CourseIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_S_SectionID", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string S_SectionID
		{
			get
			{
				return this._S_SectionID;
			}
			set
			{
				if ((this._S_SectionID != value))
				{
					if (this._Section.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnS_SectionIDChanging(value);
					this.SendPropertyChanging();
					this._S_SectionID = value;
					this.SendPropertyChanged("S_SectionID");
					this.OnS_SectionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="StudentsSouthville_EvaluationResponse", Storage="_EvaluationResponses", ThisKey="S_StudentID", OtherKey="S_StudentID")]
		public EntitySet<EvaluationResponse> EvaluationResponses
		{
			get
			{
				return this._EvaluationResponses;
			}
			set
			{
				this._EvaluationResponses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Course_StudentsSouthville", Storage="_Course", ThisKey="C_CourseID", OtherKey="C_CourseID", IsForeignKey=true)]
		public Course Course
		{
			get
			{
				return this._Course.Entity;
			}
			set
			{
				Course previousValue = this._Course.Entity;
				if (((previousValue != value) 
							|| (this._Course.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Course.Entity = null;
						previousValue.StudentsSouthvilles.Remove(this);
					}
					this._Course.Entity = value;
					if ((value != null))
					{
						value.StudentsSouthvilles.Add(this);
						this._C_CourseID = value.C_CourseID;
					}
					else
					{
						this._C_CourseID = default(string);
					}
					this.SendPropertyChanged("Course");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Section_StudentsSouthville", Storage="_Section", ThisKey="S_SectionID", OtherKey="S_SectionID", IsForeignKey=true)]
		public Section Section
		{
			get
			{
				return this._Section.Entity;
			}
			set
			{
				Section previousValue = this._Section.Entity;
				if (((previousValue != value) 
							|| (this._Section.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Section.Entity = null;
						previousValue.StudentsSouthvilles.Remove(this);
					}
					this._Section.Entity = value;
					if ((value != null))
					{
						value.StudentsSouthvilles.Add(this);
						this._S_SectionID = value.S_SectionID;
					}
					else
					{
						this._S_SectionID = default(string);
					}
					this.SendPropertyChanged("Section");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserLogin_StudentsSouthville", Storage="_UserLogin", ThisKey="U_UserID", OtherKey="U_UserID", IsForeignKey=true)]
		public UserLogin UserLogin
		{
			get
			{
				return this._UserLogin.Entity;
			}
			set
			{
				UserLogin previousValue = this._UserLogin.Entity;
				if (((previousValue != value) 
							|| (this._UserLogin.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserLogin.Entity = null;
						previousValue.StudentsSouthvilles.Remove(this);
					}
					this._UserLogin.Entity = value;
					if ((value != null))
					{
						value.StudentsSouthvilles.Add(this);
						this._U_UserID = value.U_UserID;
					}
					else
					{
						this._U_UserID = default(string);
					}
					this.SendPropertyChanged("UserLogin");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_EvaluationResponses(EvaluationResponse entity)
		{
			this.SendPropertyChanging();
			entity.StudentsSouthville = this;
		}
		
		private void detach_EvaluationResponses(EvaluationResponse entity)
		{
			this.SendPropertyChanging();
			entity.StudentsSouthville = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserLogin")]
	public partial class UserLogin : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _U_UserID;
		
		private string _U_UserName;
		
		private string _U_Password;
		
		private string _U_Role;
		
		private EntitySet<AdminFacultyEval> _AdminFacultyEvals;
		
		private EntitySet<StudentsSouthville> _StudentsSouthvilles;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnU_UserIDChanging(string value);
    partial void OnU_UserIDChanged();
    partial void OnU_UserNameChanging(string value);
    partial void OnU_UserNameChanged();
    partial void OnU_PasswordChanging(string value);
    partial void OnU_PasswordChanged();
    partial void OnU_RoleChanging(string value);
    partial void OnU_RoleChanged();
    #endregion
		
		public UserLogin()
		{
			this._AdminFacultyEvals = new EntitySet<AdminFacultyEval>(new Action<AdminFacultyEval>(this.attach_AdminFacultyEvals), new Action<AdminFacultyEval>(this.detach_AdminFacultyEvals));
			this._StudentsSouthvilles = new EntitySet<StudentsSouthville>(new Action<StudentsSouthville>(this.attach_StudentsSouthvilles), new Action<StudentsSouthville>(this.detach_StudentsSouthvilles));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_U_UserID", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string U_UserID
		{
			get
			{
				return this._U_UserID;
			}
			set
			{
				if ((this._U_UserID != value))
				{
					this.OnU_UserIDChanging(value);
					this.SendPropertyChanging();
					this._U_UserID = value;
					this.SendPropertyChanged("U_UserID");
					this.OnU_UserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_U_UserName", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string U_UserName
		{
			get
			{
				return this._U_UserName;
			}
			set
			{
				if ((this._U_UserName != value))
				{
					this.OnU_UserNameChanging(value);
					this.SendPropertyChanging();
					this._U_UserName = value;
					this.SendPropertyChanged("U_UserName");
					this.OnU_UserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_U_Password", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string U_Password
		{
			get
			{
				return this._U_Password;
			}
			set
			{
				if ((this._U_Password != value))
				{
					this.OnU_PasswordChanging(value);
					this.SendPropertyChanging();
					this._U_Password = value;
					this.SendPropertyChanged("U_Password");
					this.OnU_PasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_U_Role", DbType="VarChar(50)")]
		public string U_Role
		{
			get
			{
				return this._U_Role;
			}
			set
			{
				if ((this._U_Role != value))
				{
					this.OnU_RoleChanging(value);
					this.SendPropertyChanging();
					this._U_Role = value;
					this.SendPropertyChanged("U_Role");
					this.OnU_RoleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserLogin_AdminFacultyEval", Storage="_AdminFacultyEvals", ThisKey="U_UserID", OtherKey="U_UserID")]
		public EntitySet<AdminFacultyEval> AdminFacultyEvals
		{
			get
			{
				return this._AdminFacultyEvals;
			}
			set
			{
				this._AdminFacultyEvals.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserLogin_StudentsSouthville", Storage="_StudentsSouthvilles", ThisKey="U_UserID", OtherKey="U_UserID")]
		public EntitySet<StudentsSouthville> StudentsSouthvilles
		{
			get
			{
				return this._StudentsSouthvilles;
			}
			set
			{
				this._StudentsSouthvilles.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AdminFacultyEvals(AdminFacultyEval entity)
		{
			this.SendPropertyChanging();
			entity.UserLogin = this;
		}
		
		private void detach_AdminFacultyEvals(AdminFacultyEval entity)
		{
			this.SendPropertyChanging();
			entity.UserLogin = null;
		}
		
		private void attach_StudentsSouthvilles(StudentsSouthville entity)
		{
			this.SendPropertyChanging();
			entity.UserLogin = this;
		}
		
		private void detach_StudentsSouthvilles(StudentsSouthville entity)
		{
			this.SendPropertyChanging();
			entity.UserLogin = null;
		}
	}
}
#pragma warning restore 1591
